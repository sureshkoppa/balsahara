/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cdac.usermanagement.ORM;

import java.io.Serializable;
import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;

/**
 *
 * @author ANUPAM
 */
@Entity
@Table(name = "user_detail", catalog = "child_homes", schema = "")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "UserDetail.findByHomeIdAndActiveStatus", query = "SELECT u FROM UserDetail u WHERE u.status='active' AND u.userDetailPK.homeId = :homeId"),
    @NamedQuery(name = "UserDetail.findByUserIdAndActiveStatus", query = "SELECT u FROM UserDetail u WHERE u.status='active' AND u.userDetailPK.userId = :userId"),
    @NamedQuery(name = "UserDetail.findByUserIdHomeIdAndRoleId", query = "SELECT u FROM UserDetail u WHERE u.userDetailPK.userId = :userId AND u.userDetailPK.homeId = :homeId AND u.userDetailPK.roleId = :roleId"),
    
    @NamedQuery(name = "UserDetail.findAll", query = "SELECT u FROM UserDetail u"),
    @NamedQuery(name = "UserDetail.findByUserId", query = "SELECT u FROM UserDetail u WHERE u.userDetailPK.userId = :userId"),
    @NamedQuery(name = "UserDetail.findByRoleId", query = "SELECT u FROM UserDetail u WHERE u.userDetailPK.roleId = :roleId"),
    @NamedQuery(name = "UserDetail.findByHomeId", query = "SELECT u FROM UserDetail u WHERE u.userDetailPK.homeId = :homeId"),
    @NamedQuery(name = "UserDetail.findByStartDate", query = "SELECT u FROM UserDetail u WHERE u.startDate = :startDate"),
    @NamedQuery(name = "UserDetail.findByEndDate", query = "SELECT u FROM UserDetail u WHERE u.endDate = :endDate"),
    @NamedQuery(name = "UserDetail.findByStatus", query = "SELECT u FROM UserDetail u WHERE u.status = :status")})
public class UserDetail implements Serializable {
    private static final long serialVersionUID = 1L;
    @EmbeddedId
    protected UserDetailPK userDetailPK;
    @Column(name = "START_DATE")
    @Temporal(TemporalType.DATE)
    private Date startDate;
    @Column(name = "END_DATE")
    @Temporal(TemporalType.DATE)
    private Date endDate;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 20)
    @Column(name = "STATUS", nullable = false, length = 20)
    private String status;
    
    @Column(name = "LAST_MODIFIED_DATE")
    @Temporal(TemporalType.DATE)
    private Date lastModifiedDate;
    
    @Column(name = "LAST_MODIFIED_BY")    
    private String lastModifiedBy;
    
    
    @JoinColumn(name = "USER_ID", referencedColumnName = "USER_ID", nullable = false, insertable = false, updatable = false)
    @ManyToOne(optional = false)
    private UserMaster userMaster;
    @JoinColumn(name = "ROLE_ID", referencedColumnName = "ROLE_ID", nullable = false, insertable = false, updatable = false)
    @ManyToOne(optional = false)
    private RoleMaster roleMaster;
    @JoinColumn(name = "HOME_ID", referencedColumnName = "HOME_ID", nullable = false, insertable = false, updatable = false)
    @ManyToOne(optional = false)
    private HomeMaster homeMaster;

    public UserDetail() {
    }

    public UserDetail(UserDetailPK userDetailPK) {
        this.userDetailPK = userDetailPK;
    }

    public UserDetail(UserDetailPK userDetailPK, String status) {
        this.userDetailPK = userDetailPK;
        this.status = status;
    }

    public UserDetail(String userId, int roleId, String homeId) {
        this.userDetailPK = new UserDetailPK(userId, roleId, homeId);
    }

    public UserDetailPK getUserDetailPK() {
        return userDetailPK;
    }

    public void setUserDetailPK(UserDetailPK userDetailPK) {
        this.userDetailPK = userDetailPK;
    }

    public Date getStartDate() {
        return startDate;
    }

    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    public Date getEndDate() {
        return endDate;
    }

    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public String getLastModifiedBy() {
        return lastModifiedBy;
    }

    public void setLastModifiedBy(String lastModifiedBy) {
        this.lastModifiedBy = lastModifiedBy;
    }

    public Date getLastModifiedDate() {
        return lastModifiedDate;
    }

    public void setLastModifiedDate(Date lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }

    
    public UserMaster getUserMaster() {
        return userMaster;
    }

    public void setUserMaster(UserMaster userMaster) {
        this.userMaster = userMaster;
    }

    public RoleMaster getRoleMaster() {
        return roleMaster;
    }

    public void setRoleMaster(RoleMaster roleMaster) {
        this.roleMaster = roleMaster;
    }

    public HomeMaster getHomeMaster() {
        return homeMaster;
    }

    public void setHomeMaster(HomeMaster homeMaster) {
        this.homeMaster = homeMaster;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (userDetailPK != null ? userDetailPK.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof UserDetail)) {
            return false;
        }
        UserDetail other = (UserDetail) object;
        if ((this.userDetailPK == null && other.userDetailPK != null) || (this.userDetailPK != null && !this.userDetailPK.equals(other.userDetailPK))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "com.cdac.usermanagement.ORM.UserDetail[ userDetailPK=" + userDetailPK + " ]";
    }
    
}
